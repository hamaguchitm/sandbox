#! /usr/bin/python
# -*- coding: utf-8 -*-

import sys
import traceback

sys.setrecursionlimit(10000000000)

def pow8_1(x, n):
  max = 100000000
  if n == 0:
    return 1
  else:
    if not x < max:
      x = x % max
    
    return (x * pow8(x, n-1)) % max

def pow8_2(x, n):
  max = 100000000
  if not x < max:
    x = x % max

  val = x

  while n > 1:
    val = val * x
    if not val < max:
      val = val % max
    n -= 1

  return val   

def pow8_3(x, n):
  max = 100000000
  if not x < max:
    x %= max
    
  if n == 1:
    return x
  else:
    p = pow8_3(x, n/2)
    if n % 2 == 1:
      return p * p * x % max
    else:
      return p * p % max

def pow8(x, n):
  return pow8_3(x, n)


if __name__ == "__main__":
  
  if len(sys.argv) == 4 and sys.argv[1] == "-i":
    try:
      x = int(sys.argv[2])
      n = int(sys.argv[3])
      
      print sys.argv[3] + "th power of " + sys.argv[2] + ": " + str(pow8(x, n))
    except:
      print "number format error"
      print traceback.format_exc(sys.exc_info()[2])

  elif len(sys.argv) == 3 and sys.argv[1] == "-f":
    try:
      f = open(sys.argv[2], "r")
      
      for line in f:
        nums = line.replace("\n", "").split(" ")
        print nums
        x = int(nums[0])
        n = int(nums[1])
        print nums[1] + "th power of " + nums[0] + ": " + str(pow8(x, n))
    except:
      print "file can not open"
      print traceback.format_exc(sys.exc_info()[2])

  else:
    print "usage: " + sys.argv[0] + " -i <x> <n>"
    print "usage: " + sys.argv[0] + " -f <filename>"

